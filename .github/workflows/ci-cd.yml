name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Install backend dependencies
      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      # 4. Run backend tests
      - name: Run backend tests
        run: |
          cd backend
          npm test

      # 5. Lint backend code
      - name: Lint backend code
        run: |
          cd backend
          npm run lint

      # 6. Install frontend dependencies
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # 7. Lint frontend code
      - name: Lint frontend code
        run: |
          cd frontend
          npm run lint

      # 8. Build Docker images
      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend

      # 9. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 10. Push Docker images
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      # 11. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 12. Update kubeconfig
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name infilect-cluster

      # 13. Apply Kubernetes manifests
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml

